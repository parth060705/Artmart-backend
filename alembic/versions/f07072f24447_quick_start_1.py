"""quick start 1

Revision ID: f07072f24447
Revises: 
Create Date: 2025-10-27 13:54:48.065713

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = 'f07072f24447'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('username', sa.String(length=100), nullable=False),
    sa.Column('passwordHash', sa.String(length=255), nullable=False),
    sa.Column('role', sa.Enum('user', 'admin', 'store', name='roleenum', native_enum=False), nullable=False),
    sa.Column('profileImage', sa.String(length=255), nullable=True),
    sa.Column('profileImagePublicId', sa.String(length=255), nullable=True),
    sa.Column('createdAt', sa.DateTime(), nullable=True),
    sa.Column('updatedAt', sa.DateTime(), nullable=True),
    sa.Column('location', sa.String(length=100), nullable=True),
    sa.Column('pincode', sa.CHAR(length=6), nullable=True),
    sa.Column('gender', sa.String(length=20), nullable=True),
    sa.Column('age', sa.Integer(), nullable=True),
    sa.Column('phone', sa.String(length=15), nullable=True),
    sa.Column('bio', sa.String(length=500), nullable=True),
    sa.Column('profile_completion', sa.Integer(), nullable=True),
    sa.Column('isActive', sa.Boolean(), nullable=True),
    sa.Column('isAgreedtoTC', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_table('artist_reviews',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('reviewer_id', sa.String(length=36), nullable=False),
    sa.Column('artist_id', sa.String(length=36), nullable=False),
    sa.Column('rating', sa.Integer(), nullable=False),
    sa.Column('comment', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['artist_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['reviewer_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('artworks',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('title', sa.String(length=200), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('tags', sa.JSON(), nullable=True),
    sa.Column('price', sa.Float(), nullable=True),
    sa.Column('quantity', sa.Integer(), nullable=True),
    sa.Column('category', sa.String(length=100), nullable=False),
    sa.Column('artistId', sa.String(length=36), nullable=True),
    sa.Column('createdAt', sa.DateTime(), nullable=True),
    sa.Column('isSold', sa.Boolean(), nullable=True),
    sa.Column('isDeleted', sa.Boolean(), nullable=True),
    sa.Column('forSale', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['artistId'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('messages',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('sender_id', sa.String(length=36), nullable=False),
    sa.Column('receiver_id', sa.String(length=36), nullable=False),
    sa.Column('content', sa.Text(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('is_read', sa.Boolean(), nullable=True),
    sa.Column('message_type', sa.String(length=20), nullable=True),
    sa.ForeignKeyConstraint(['receiver_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['sender_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_followers',
    sa.Column('follower_id', sa.String(length=36), nullable=False),
    sa.Column('followed_id', sa.String(length=36), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['followed_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['follower_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('follower_id', 'followed_id')
    )
    op.create_table('artwork_images',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('artwork_id', sa.String(length=36), nullable=True),
    sa.Column('url', sa.String(length=500), nullable=False),
    sa.Column('public_id', sa.String(length=255), nullable=False),
    sa.ForeignKeyConstraint(['artwork_id'], ['artworks.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('artwork_likes',
    sa.Column('userId', sa.String(length=36), nullable=False),
    sa.Column('artworkId', sa.String(length=36), nullable=False),
    sa.Column('createdAt', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['artworkId'], ['artworks.id'], ),
    sa.ForeignKeyConstraint(['userId'], ['users.id'], ),
    sa.PrimaryKeyConstraint('userId', 'artworkId')
    )
    op.create_table('cart',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('userId', sa.String(length=36), nullable=True),
    sa.Column('artworkId', sa.String(length=36), nullable=True),
    sa.Column('purchase_quantity', sa.Integer(), nullable=False),
    sa.Column('createdAt', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['artworkId'], ['artworks.id'], ),
    sa.ForeignKeyConstraint(['userId'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('comments',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('user_id', sa.String(length=36), nullable=False),
    sa.Column('artwork_id', sa.String(length=36), nullable=False),
    sa.Column('content', sa.String(length=500), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['artwork_id'], ['artworks.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('orders',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('buyerId', sa.String(length=36), nullable=True),
    sa.Column('artworkId', sa.String(length=36), nullable=True),
    sa.Column('totalAmount', sa.Float(), nullable=False),
    sa.Column('paymentStatus', sa.Enum('pending', 'paid', 'failed', name='paymentstatusenum', native_enum=False), nullable=False),
    sa.Column('createdAt', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['artworkId'], ['artworks.id'], ),
    sa.ForeignKeyConstraint(['buyerId'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('reviews',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('reviewerId', sa.String(length=36), nullable=True),
    sa.Column('artistId', sa.String(length=36), nullable=True),
    sa.Column('artworkId', sa.String(length=36), nullable=True),
    sa.Column('rating', sa.Integer(), nullable=False),
    sa.Column('comment', sa.Text(), nullable=True),
    sa.Column('createdAt', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['artistId'], ['users.id'], ),
    sa.ForeignKeyConstraint(['artworkId'], ['artworks.id'], ),
    sa.ForeignKeyConstraint(['reviewerId'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('saved',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('userId', sa.String(length=36), nullable=True),
    sa.Column('artworkId', sa.String(length=36), nullable=True),
    sa.Column('createdAt', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['artworkId'], ['artworks.id'], ),
    sa.ForeignKeyConstraint(['userId'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('payments',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('order_id', sa.String(length=36), nullable=False),
    sa.Column('user_id', sa.String(length=36), nullable=False),
    sa.Column('transaction_id', sa.String(length=100), nullable=True),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('status', sa.Enum('pending', 'paid', 'failed', name='paymentstatusenum', native_enum=False), nullable=False),
    sa.Column('method', sa.Enum('credit_card', 'debit_card', 'net_banking', 'upi', 'cod', name='paymentmethodenum', native_enum=False), nullable=False),
    sa.Column('paid_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['order_id'], ['orders.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('transaction_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('payments')
    op.drop_table('saved')
    op.drop_table('reviews')
    op.drop_table('orders')
    op.drop_table('comments')
    op.drop_table('cart')
    op.drop_table('artwork_likes')
    op.drop_table('artwork_images')
    op.drop_table('user_followers')
    op.drop_table('messages')
    op.drop_table('artworks')
    op.drop_table('artist_reviews')
    op.drop_table('users')
    # ### end Alembic commands ###
